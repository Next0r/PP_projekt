@model EditAnnouncementViewModel
@using BedAndBreakfast.Data;

@{
    ViewData["Title"] = "SubtypeSelectionForm";
    Array houseSubtypes = Enum.GetValues(typeof(EnumeratedDbValues.HouseSubtype));
    Array houseSharedParts = Enum.GetValues(typeof(EnumeratedDbValues.HouseSharedPart));
    Array entertinementTypes = Enum.GetValues(typeof(EnumeratedDbValues.EntertainmentSubtype));
    Array foodTypes = Enum.GetValues(typeof(EnumeratedDbValues.FoodSubtype));
}

<script type="text/javascript">


</script>

<h2>SubtypeSelectionForm</h2>

<div id="subtypes"></div>

<div id="errorMessage"></div>

<div>
    @switch (Model.Type)
    {
        case 0:
            <label>House type</label>
            <select id="houseSubtype">
                @foreach (int enumValue in houseSubtypes)
                {
                    @if (Model.Subtype == enumValue)
                    {
                        @:<option value="@enumValue" selected>@Enum.GetName(typeof(EnumeratedDbValues.HouseSubtype), enumValue)</option>
                    }
                    else
                    {
                        @:<option value="@enumValue">@Enum.GetName(typeof(EnumeratedDbValues.HouseSubtype), enumValue)</option>
                    }
                }
            </select>
            <label>House shared part</label>
            <select id="houseSharedPart">
                @foreach (int enumValue in houseSharedParts)
                {
                    @if (Model.SharedPart == enumValue)
                    {
                        @:<option value="@enumValue" selected>@Enum.GetName(typeof(EnumeratedDbValues.HouseSharedPart), enumValue)</option>
                    }
                    else
                    {
                        @:<option value="@enumValue">@Enum.GetName(typeof(EnumeratedDbValues.HouseSharedPart), enumValue)</option>
                    }
                }
            </select>
            break;
        case 1:
            <label>Entertainment type</label>
            <select id="entertainmentType">
                @foreach (int enumValue in entertinementTypes)
                {
                    @if (Model.Subtype == enumValue)
                    {
                        @:<option value="@enumValue" selected>@Enum.GetName(typeof(EnumeratedDbValues.EntertainmentSubtype), enumValue)</option>
                    }
                    else
                    {
                        @:<option value="@enumValue">@Enum.GetName(typeof(EnumeratedDbValues.EntertainmentSubtype), enumValue)</option>
                    }
                }
            </select>
            break;
        case 2:
            <label>Food type</label>
            <select id="foodType">
                @foreach (int enumValue in foodTypes)
                {
                    @if (Model.Subtype == enumValue)
                    {
                        @:<option value="@enumValue" selected>@Enum.GetName(typeof(EnumeratedDbValues.FoodSubtype), enumValue)</option>
                    }
                    else
                    {
                        @:<option value="@enumValue">@Enum.GetName(typeof(EnumeratedDbValues.FoodSubtype), enumValue)</option>
                    }
                }
            </select>
            break;
        default:
            <div>Please select type first.</div>
            break;
    }
</div>
<div>
    @if (Model.Type != null)
    {
        <a href="#" onclick="setSubtype();">Save</a>
    }
</div>


